@*@model EventsProject.Controllers.EventController.eventsList*@
@{
    ViewBag.Title = "Events";
}

<link href="~/lib/font-awesome/css/all.css" rel="stylesheet" />
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@100;300;400;700;900&display=swap" rel="stylesheet">

<style>
    body {
        font-family: Poppins, sans-serif;
        color: white;
    }

    h1 {
        text-align: center;
        color: white;
        text-transform: uppercase;
    }

    .wrap {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: flex-start;
    }

    .event {
        position: relative;
        width: 300px;
        height: auto;
        background-color: #f2f2f2;
        border: 1px solid #0B001A;
        margin-right: 25px;
        margin-bottom: 25px;
        border-bottom-right-radius: 5px;
        border-bottom-left-radius: 5px;
        padding: 0px;
        box-sizing: border-box;
        overflow: hidden;
        text-align: center;
    }

        .event img {
            width: 100%;
            height: 200px;
            display: block;
            margin: 0;
            transition: filter 0.3s ease;
        }

        .event:hover img {
            filter: brightness(60%);
        }

        .event .caption {
            position: absolute;
            top: 45%;
            left: 50%;
            transform: translate(-50%, -50%);
            display: none;
            font-weight: bold;
            font-size: 20px;
            color: #5CE1E6;
            text-transform: uppercase;
            cursor: pointer;
        }

    .pencil, .xmark {
        position: absolute;
        transform: translate(-50%, -50%);
        display: none;
        font-weight: bold;
        font-size: 20px;
        color: #5CE1E6;
        text-transform: uppercase;
        cursor: pointer;
    }

    .pencil {
        top: 5%;
        left: 4%;
        font-size: 16px;
    }

    .xmark {
        top: 5%;
        right: -2%;
        font-size: 25px;
    }

    .event:hover .caption {
        display: block;
        color: #5CE1E6;
    }
    /*Ustawienia dotyczące opcji wyboru polygon klinięciu x-a*/
    .confirmation-dialog {
        display: none;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #5ce1e6;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        z-index: 9999;
    }

    .dialog-title {
        font-size: 18px;
        font-weight: bold;
        color: #fff;
        margin-bottom: 10px;
    }

    .options {
        display: flex;
        justify-content: center;
    }

    .option-btn {
        padding: 10px 20px;
        border-radius: 5px;
        border: none;
        background-color: #fff;
        color: #5ce1e6;
        cursor: pointer;
        transition: background-color 0.3s ease, color 0.3s ease;
        margin-right: 10px;
    }

        .option-btn:hover {
            background-color: #4cb4b9;
            color: #fff;
        }

    .event:hover .pencil {
        display: block;
        color: #5CE1E6;
    }

    .event:hover .xmark {
        display: block;
        color: #5CE1E6;
    }


    .event .description {
        padding-top: 5px;
        color: #777;
        background-color: #ED3A85;
    }

    .event div {
        color: white;
    }

    .description {
        color: white;
        font-weight: 900;
        text-transform: uppercase;
    }

    .question-title {
        font-size: 30px;
        color: white;
        font-weight: 900;
        text-transform: uppercase;
        text-align: center;
    }

    .center {
        display: flex;
        justify-content: center;
        flex-direction: column;
    }

    .button-28 {
        appearance: none;
        background-color: transparent;
        border: 2px solid #5CE1E6;
        border-radius: 15px;
        box-sizing: border-box;
        color: #5CE1E6;
        cursor: pointer;
        display: inline-block;
        font-size: 16px;
        font-weight: 600;
        line-height: normal;
        margin: 0 auto;
        min-height: 60px;
        min-width: 0;
        outline: none;
        padding: 16px 24px;
        text-align: center;
        text-decoration: none;
        transition: all 300ms cubic-bezier(.23, 1, 0.32, 1);
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
        width: 20%;
        will-change: transform;
    }

        .button-28:disabled {
            pointer-events: none;
        }

        .button-28:hover {
            color: #fff;
            background-color: rgb(92, 225, 230);
            box-shadow: rgb(92, 225, 230,0.75)0 8px 15px;
            transform: translateY(-2px);
        }

        .button-28:active {
            box-shadow: none;
            transform: translateY(0);
        }
</style>
<body>
    <h1 style="font-size: 40px; text-transform: uppercase; color: white; font-weight: 900;">events</h1>

    <section class="wrap">

        @foreach (var ev in EventsProject.Controllers.EventController.eventsList)
        {
            <div class="event">
                <img src="@ev.ImgSrc.ToString()" alt="@ev.EventName">
                <div class="description">
                    <div class="caption" onclick="location.href='@Url.Action("Event_Informations", "Home", new { nameOfEvent = ev.EventName })'">find out more</div>
                    <div style="color: #0B001A ">@ev.EventDate.ToString("dd-MM-yyyy") @ev.EventPlace</div>
                    <div>@ev.EventName</div>
                    <div class="delete-icon" onclick="openConfirmationDialog(this)"><i class="fas fa-xmark xmark"></i></div>
                    <div><i class="fas fa-pencil pencil"></i></div>
                    <div class="confirmation-dialog">
                        <div class="dialog-body">
                            <div class="dialog-title">Are you sure you want to delete the event?</div>
                            <div class="options">
                                <button formaction="@Url.Action("Remove", "Event")" class="option-btn yes-btn" onclick="location.href='@Url.Action("Remove", "Event", new { nameOfEvent = ev.EventName })'">YES</button>
                                <button onclick="closeConfirmationDialog(this)" class="option-btn no-btn">NO</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </section>
    <section class="center">
        <div>
            <div style="text-decoration-line: underline; text-decoration-color: white; text-decoration-thickness: 1px; text-underline-offset: 6px;" class="question-title">Want to <span style="color: #ED3A85;">add</span> your <span style="color: #ED3A85;">event</span> ?</div>
            <div class="question-title">Create it with us!</div>
        </div>

        <button onclick="location.href='@Url.Action("CreateEvent", "Home")'" style="margin-top: 20px;" class="button-28" role="button">CREATE EVENT</button>
    </section>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const deleteIcons = document.querySelectorAll('.delete-icon');
            deleteIcons.forEach(icon => {
                icon.addEventListener('click', () => openConfirmationDialog(icon));
            });

            function openConfirmationDialog(deleteIcon) {
                const confirmationDialog = deleteIcon.closest('.event').querySelector('.confirmation-dialog');
                confirmationDialog.style.display = 'block';

                const cancelButton = confirmationDialog.querySelector('.no-btn');
                cancelButton.addEventListener('click', () => closeConfirmationDialog(confirmationDialog));
            }

            function closeConfirmationDialog(dialog) {
                dialog.style.display = 'none';
            }
        });
    </script>

</body>