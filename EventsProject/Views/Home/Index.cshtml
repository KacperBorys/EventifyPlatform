@{
    ViewBag.Title = "Eventify | Beauty of the events world";
}
@Styles.Render("~/Content/css")
@Styles.Render("~/Content/Site.css")
<link href="~/lib/font-awesome/css/all.css" rel="stylesheet" />
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@100;300;400;700;900&display=swap" rel="stylesheet">

<style>
    body {
        font-family: Poppins, sans-serif;
        background-color: #0B001A;
    }

    main {
        height: 100%;
    }
     section {
        display: flex;
        justify-content: center;
        align-content: center;

    }

    .landing-page-container {
        margin: 40px 0 0 0px;
        top: 0;
    }
    .top-section {
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        padding-top: 50px;
        max-width: 400px;
        color: white;
    }

    .profile-picture {
        width: 40vw;
        max-width: 500px;
    }

    .title {
        font-weight: 400;
        font-size: 4vw;
        line-height: 100%;
    }
    .title-underline {
        text-decoration-line: underline;
        text-decoration-color: white;
        text-decoration-thickness: 1px;
        text-underline-offset: 6px;
    }

    .subText {
        margin-top: 10px;
        font-size: 1vw;
        width: 30vw;
    }

    .glow-on-hover {
        width: 220px;
        height: 50px;
        margin-top: 20px;
        border: none;
        outline: none;
        color: #fff;
        background: #111;
        cursor: pointer;
        position: relative;
        font-size: 15px;
        z-index: 0;
        border-radius: 10px;
    }

    .glow-on-hover:before {
        content: '';
        background: linear-gradient(45deg, #ff0000, #ff7300, #fffb00, #48ff00, #00ffd5, #002bff, #7a00ff, #ff00c8, #ff0000);
        position: absolute;
        top: -2px;
        left:-2px;
        background-size: 400%;
        z-index: -1;
        filter: blur(5px);
        width: calc(100% + 4px);
        height: calc(100% + 4px);
        animation: glowing 20s linear infinite;
        opacity: 0;
        transition: opacity .3s ease-in-out;
        border-radius: 10px;
    }

    .glow-on-hover:active {
        color: #000
    }

    .glow-on-hover:active:after {
        background: transparent;
    }

    .glow-on-hover:hover:before {
        opacity: 1;
    }

    .glow-on-hover:after {
        z-index: -1;
        content: '';
        position: absolute;
        width: 100%;
        height: 100%;
        background: #ED3A85;
        left: 0;
        top: 0;
        border-radius: 10px;
    }

    @@keyframes glowing {
        0% { background-position: 0 0; }
        50% { background-position: 400% 0; }
        100% { background-position: 0 0; }
    }
    .who-we-are{
        display: flex;
        justify-content: center;
        align-content: center;
        flex-direction: column;
    }

    .who-we-are-text{
        color: white;
        font-size: 20px;
        text-align: center;
    }
    .event {
        position: relative;
        width: 300px;
        height: auto;
        background-color: #f2f2f2;
        border: 1px solid #0B001A;
        margin-right: 25px;
        margin-bottom: 25px;
        border-bottom-right-radius: 5px;
        border-bottom-left-radius: 5px;
        padding: 0px;
        box-sizing: border-box;
        overflow: hidden;
        text-align: center;
    }

    .event img {
        width: 100%;
        height: 200px;
        display: block;
        margin: 0;
        transition: filter 0.3s ease;
    }

    .event:hover img {
        filter: brightness(60%);
    }

    .event .caption {
        position: absolute;
        top: 45%;
        left: 50%;
        transform: translate(-50%, -50%);
        display: none;
        font-weight: bold;
        font-size: 20px;
        color: #5CE1E6;
        text-transform: uppercase;
        cursor: pointer;
    }

    .event:hover .caption {
        display: block;
        color: #5CE1E6;
    }

    .event .description {
        padding-top: 5px;
        color: #777;
        background-color: #ED3A85;
    }

    .event div {
        color: white;
    }

    .description {
        color: white;
        font-weight: 900;
        text-transform: uppercase;
    }
    .upcoming-events{
        display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    }
    .pencil, .xmark {
        position: absolute;
        transform: translate(-50%, -50%);
        display: none;
        font-weight: bold;
        font-size: 20px;
        color: #5CE1E6;
        text-transform: uppercase;
        cursor: pointer;
    }

    .pencil {
        top: 5%;
        left: 4%;
        font-size: 16px;
    }

    .xmark {
        top: 5%;
        right: -2%;
        font-size: 25px;
    }

    .event:hover .caption {
        display: block;
        color: #5CE1E6;
    }

    .confirmation-dialog {
        display: none;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #5ce1e6;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        z-index: 9999;
    }

    .dialog-title {
        font-size: 18px;
        font-weight: bold;
        color: #fff;
        margin-bottom: 10px;
    }

    .options {
        display: flex;
        justify-content: center;
    }

    .option-btn {
        padding: 10px 20px;
        border-radius: 5px;
        border: none;
        background-color: #fff;
        color: #5ce1e6;
        cursor: pointer;
        transition: background-color 0.3s ease, color 0.3s ease;
        margin-right: 10px;
    }

        .option-btn:hover {
            background-color: #4cb4b9;
            color: #fff;
        }

    .event:hover .pencil {
        display: block;
        color: #5CE1E6;
    }

    .event:hover .xmark {
        display: block;
        color: #5CE1E6;
    }

    .wrap {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: flex-start;
        margin-top: 20px;
    }
    .find-more-button {
        text-align: center;
        appearance: none;
        background-color: transparent;
        border: 2px solid rgb(237, 58, 133);
        border-radius: 15px;
        box-sizing: border-box;
        color: #ED3A85;
        cursor: pointer;
        display: inline-block;
        font-size: 16px;
        font-weight: 600;
        line-height: normal;
        margin: 0 auto;
        min-height: 60px;
        min-width: 0;
        outline: none;
        padding: 16px 24px;
        text-align: center;
        text-decoration: none;
        transition: all 300ms cubic-bezier(.23, 1, 0.32, 1);
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
        width: 20%;
        will-change: transform;
    }

    .find-more-button:disabled {
        pointer-events: none;
    }

    .find-more-button:hover {
        color: #fff;
        background-color: #ED3A85;
        box-shadow: rgb(237, 58, 133, 0.75)0 8px 15px;
        transform: translateY(-2px);
    }

    .find-more-button:active {
        box-shadow: none;
        transform: translateY(0);
    }


</style>
<body>
    <main>
        <section class="paralax-effect">
            <div class="top-section">
                <div class="landing-page-container">
                    <div class="subText"></div>
                    <div class="title title-underline">Discover the<img src="~/Image/star_icon.png" style="width: 4vw; display: inline; margin-left: 10px;" /></div>
                    <div class="title title-underline"><span style="color: #ED3A85;"><span id="text-to-animate">beauty</span> of the</span></div>
                    <div class="title">events <span style="color: #ED3A85; font-style: italic;">world</span></div>
                    <div class="subText">
                        Explore the enchantment of the captivating world of events. Immerse yourself in unforgettable experiences and awe-inspiring moments. 
                        Engage with the vibrant atmosphere and indulge in a symphony of sights, sounds, and sensations.
                    </div>
                    <button id="main-button" class="glow-on-hover" type="button">Let's explore!</button>
                </div>
                <div style="margin:0 20px"></div>
                <div>
                    <img class="profile-picture" src="~/Image/landing-page-image.png">
                </div>
            </div>

        </section>
        <section id="who-we-are" class="who-we-are">
            <div style="font-size: 40px; text-align: center; text-transform: uppercase; color: rgb(237, 58, 133); font-weight: 900; margin-top: 40px;">WHO WE ARE?</div>
            <p class="who-we-are-text"> We are a dynamic online platform dedicated to providing access to the latest information about exciting events in your region. Our mission is to gather and present a wide selection of cultural, artistic, sports, and entertainment events, enabling you to have exceptional experiences and create unforgettable moments. With our user-friendly website, convenient ticket purchasing, and a vibrant community of culture and entertainment enthusiasts, Eventify is your go-to destination for discovering and connecting with the best events in town. Join us today and explore the world of Eventify!</p>
        </section>
        <div style="font-size: 40px; text-align: center; text-transform: uppercase; color: white; font-weight: 900; margin-top: 40px;">UP COMING EVENTS</div>
        <section class="wrap">
            @foreach (var ev in EventsProject.Controllers.EventController.eventsList.Take(3))
            {
                <div class="event">
                    <img src="@ev.ImgSrc.ToString()" alt="@ev.EventName">
                    <div class="description">
                        <div class="caption" onclick="location.href='@Url.Action("Event_Informations", "Home", new { nameOfEvent = ev.EventName })'">find out more</div>
                        <div style="color: #0B001A ">@ev.EventDate.ToString("dd.MM.yyyy") @ev.EventPlace</div>
                        <div>@ev.EventName</div>
                        <div class="delete-icon" onclick="openConfirmationDialog(this)"><i class="fas fa-xmark xmark"></i></div>
                        <div onclick="location.href='@Url.Action("EventModified", "Home", new { nameOfEvent = ev.EventName })'"><i class="fas fa-pencil pencil"></i></div>
                        <div class="confirmation-dialog">
                            <div class="dialog-body">
                                <div class="dialog-title">Are you sure you want to delete the event?</div>
                                <div class="options">
                                    <button formaction="@Url.Action("Remove", "Event")" class="option-btn yes-btn" onclick="location.href='@Url.Action("Remove", "Event", new { nameOfEvent = ev.EventName })'">YES</button>
                                    <button onclick="closeConfirmationDialog(this)" class="option-btn no-btn">NO</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }

        </section>
        <div style="display: flex; justify-content: center;">
            <button onclick="location.href='@Url.Action("Events", "Home")'" class="find-more-button" role="button">FIND OUT MORE</button>
        </div>
    </main>

  <script>
      const button = document.getElementById("main-button");
      const section = document.getElementById("who-we-are");
      button.addEventListener("click", () => {
          const offset = section.offsetTop;
          window.scrollTo({
              top: offset,
              behavior: "smooth"
          });
      });
      document.addEventListener('DOMContentLoaded', () => {
          const textElement = document.getElementById('text-to-animate');
          const words = ['beauty', 'joy', 'grace','fun']; // Słowa, które mają być wyświetlane
          let wordIndex = 0; // Indeks aktualnie wyświetlanego słowa
          let letterIndex = 0; // Indeks aktualnie wyświetlanej litery
          let isDeleting = false; // Flaga określająca, czy ma miejsce kasowanie tekstu

          const typingAnimation = () => {
              const currentWord = words[wordIndex];
              let currentText;

              if (isDeleting) {
                  currentText = currentWord.slice(0, letterIndex);
                  letterIndex--;
              } else {
                  currentText = currentWord.slice(0, letterIndex + 1);
                  letterIndex++;
              }

              textElement.textContent = currentText;

              if (!isDeleting && currentText === currentWord) {
                  isDeleting = true;
                  setTimeout(typingAnimation, 1000); // Czas oczekiwania po wpisaniu pełnego tekstu
              } else if (isDeleting && currentText === '') {
                  isDeleting = false;
                  wordIndex++;
                  if (wordIndex >= words.length) {
                      wordIndex = 0;
                  }
                  setTimeout(typingAnimation, 500); // Czas oczekiwania po skasowaniu tekstu
              } else {
                  const typingSpeed = isDeleting ? 50 : Math.floor(Math.random() * 400) + 50; // Prędkość kasowania i pisania
                  setTimeout(typingAnimation, typingSpeed);
              }
          };

          typingAnimation();
      });
  </script>
</body>